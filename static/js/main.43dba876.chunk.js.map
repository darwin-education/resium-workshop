{"version":3,"sources":["../external \"Cesium\"","splash.png","SprashScreen.js","App.js","index.js"],"names":["module","exports","Cesium","__webpack_require__","p","center","BoundingSphere","Cartesian3","fromDegrees","SplashScreen","state","show","camera","_this2","this","clearTimeout","items","timeouts","map","item","i","setTimeout","forEach","t","seriesTimeout","setState","boundingSphere","offset","HeadingPitchRange","CesiumMath","toRadians","duration","react_default","a","createElement","Fragment","resium_es","react_transition_group","in","timeout","classNames","mountOnEnter","unmountOnExit","className","src","SplashScreenImg","alt","React","PureComponent","imageryProvider","createOpenStreetMapImageryProvider","url","ext","zmin","zmax","credit","defaultImageryProvider","createWorldImagery","App","viewerRef","createRef","tileAlpha","handleSelectedEntityChanged","_this","current","cesiumElement","viewer","selectedEntity","flyToBoundingSphere","position","getValue","clock","currentTime","handleKmlLoad","dataSource","entities","values","e","label","undefined","handleTileAlphaChange","parseInt","currentTarget","value","full","animation","timeline","baseLayerPicker","ref","onSelectedEntityChange","alpha","data","onLoad","name","point","pixelSize","type","min","max","onChange","SprashScreen","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.43dba876.chunk.js","sourcesContent":["module.exports = Cesium;","module.exports = __webpack_public_path__ + \"static/media/splash.952fdb84.png\";","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { CameraFlyToBoundingSphere } from \"resium\";\nimport { BoundingSphere, Cartesian3, HeadingPitchRange, Math as CesiumMath } from \"cesium\";\nimport SplashScreenImg from \"./splash.png\";\n\nconst seriesTimeout = items => {\n  const timeouts = items.map((item, i) =>\n    setTimeout(item[0], item[1] + (i === 0 ? 0 : items[i - 1][1]))\n  );\n  return () => timeouts.forEach(t => clearTimeout(t));\n};\n\nconst center = new BoundingSphere(Cartesian3.fromDegrees(140, 35.7, 0), 0);\n\nclass SplashScreen extends React.PureComponent {\n  state = {\n    show: false,\n    camera: null,\n  };\n\n  componentDidMount() {\n    this.clearTimeout = seriesTimeout([\n      [() => this.setState({ show: true }), 0],\n      [() => this.setState({\n        show: false,\n        camera: {\n          boundingSphere: center,\n          offset: new HeadingPitchRange(0, CesiumMath.toRadians(-90), 200000),\n          duration: 2\n        }\n      }), 2000],\n      [() => this.setState({\n        camera: {\n          boundingSphere: center,\n          offset: new HeadingPitchRange(0, CesiumMath.toRadians(-30), 80000),\n          duration: 3\n        }\n      }), 3500],\n      [() => this.setState({ camera: null }), 3000],\n    ]);\n  }\n\n  componentWillUnmount() {\n    this.clearTimeout();\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.camera && (\n          <CameraFlyToBoundingSphere\n            boundingSphere={this.state.camera.boundingSphere}\n            offset={this.state.camera.offset}\n            duration={this.state.camera.duration} />\n        )}\n        <CSSTransition\n          in={this.state.show}\n          timeout={2500}\n          classNames=\"splashscreen\"\n          mountOnEnter\n          unmountOnExit>\n          {() => (\n            <div className=\"splashscreen\">\n              <img\n                src={SplashScreenImg}\n                className=\"splashImg\"\n                alt=\"Japanese Archeic Map Archives\" />\n            </div>\n          )}\n        </CSSTransition>\n      </>\n    );\n  };\n}\n\nexport default SplashScreen;\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport {\n  Cartesian3,\n  createOpenStreetMapImageryProvider,\n  createWorldImagery,\n  BoundingSphere\n} from 'cesium';\nimport { Viewer, ImageryLayer, KmlDataSource, Entity, EntityDescription } from 'resium';\nimport SplashScreen from './SprashScreen';\n\nconst imageryProvider = createOpenStreetMapImageryProvider({\n  url: 'http://www.finds.jp/ws/tmc/1.0.0/Kanto_Rapid-900913-L/',\n  ext: \"jpg\",\n  zmin: 0,\n  zmax: 18,\n  credit: 'CC BY 国立研究開発法人農業環境技術研究所 歴史的農業環境閲覧システム',\n});\n\nconst defaultImageryProvider = createWorldImagery();\n\nclass App extends React.PureComponent {\n  viewerRef = React.createRef();\n\n  state = {\n    tileAlpha: 100\n  };\n\n  handleSelectedEntityChanged = () => {\n    if (!this.viewerRef.current || !this.viewerRef.current.cesiumElement) {\n      return;\n    }\n    const viewer = this.viewerRef.current.cesiumElement;\n    const selectedEntity = viewer.selectedEntity;\n    if (selectedEntity) {\n      viewer.camera.flyToBoundingSphere(\n        new BoundingSphere(selectedEntity.position.getValue(viewer.clock.currentTime), 1000),\n        { duration: 1 }\n      );\n    }\n  };\n\n  handleKmlLoad = (dataSource) => {\n    dataSource.entities.values.forEach(e => {\n      e.label = undefined;\n    });\n  };\n\n  handleTileAlphaChange = e => {\n    this.setState({ tileAlpha: parseInt(e.currentTarget.value, 10) });\n  }\n\n  render() {\n    return (\n      <Viewer\n        full\n        animation={false}\n        timeline={false}\n        baseLayerPicker={false}\n        ref={this.viewerRef}\n        onSelectedEntityChange={this.handleSelectedEntityChanged}>\n        <ImageryLayer imageryProvider={defaultImageryProvider} />\n        <ImageryLayer imageryProvider={imageryProvider} alpha={this.state.tileAlpha / 100} />\n        <KmlDataSource\n          data={process.env.PUBLIC_URL + \"/doc.kml\"}\n          onLoad={this.handleKmlLoad} />\n        <Entity\n          name=\"Hello\"\n          position={Cartesian3.fromDegrees(140, 35.7, 0)}\n          point={{ pixelSize: 20 }} >\n          <EntityDescription>\n            <h1>hello world</h1>\n            <p>test</p>\n          </EntityDescription>\n        </Entity>\n        <div className=\"tile-alpha-slider\">\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            value={this.state.tileAlpha}\n            onChange={this.handleTileAlphaChange} />\n        </div>\n        <SplashScreen />\n      </Viewer>\n    );\n  }\n}\n\nexport default hot(module)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}